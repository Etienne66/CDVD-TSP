CDVD_TSP(
  (flow_net): Flow_PWC(
    (moduleNetwork): Network(
      (moduleExtractor): Extractor(
        (moduleOne): Sequential(
          (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
          (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.1)
          (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (5): LeakyReLU(negative_slope=0.1)
        )
        (moduleTwo): Sequential(
          (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
          (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.1)
          (4): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (5): LeakyReLU(negative_slope=0.1)
        )
        (moduleThr): Sequential(
          (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.1)
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (5): LeakyReLU(negative_slope=0.1)
        )
        (moduleFou): Sequential(
          (0): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
          (2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.1)
          (4): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (5): LeakyReLU(negative_slope=0.1)
        )
        (moduleFiv): Sequential(
          (0): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
          (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.1)
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (5): LeakyReLU(negative_slope=0.1)
        )
        (moduleSix): Sequential(
          (0): Conv2d(128, 196, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
          (2): Conv2d(196, 196, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.1)
          (4): Conv2d(196, 196, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (5): LeakyReLU(negative_slope=0.1)
        )
      )
      (moduleTwo): Decoder(
        (moduleUpflow): ConvTranspose2d(2, 2, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
        (moduleUpfeat): ConvTranspose2d(597, 2, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
        (moduleOne): Sequential(
          (0): Conv2d(117, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleTwo): Sequential(
          (0): Conv2d(245, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleThr): Sequential(
          (0): Conv2d(373, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleFou): Sequential(
          (0): Conv2d(469, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleFiv): Sequential(
          (0): Conv2d(533, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleSix): Sequential(
          (0): Conv2d(565, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (moduleThr): Decoder(
        (moduleUpflow): ConvTranspose2d(2, 2, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
        (moduleUpfeat): ConvTranspose2d(629, 2, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
        (moduleOne): Sequential(
          (0): Conv2d(149, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleTwo): Sequential(
          (0): Conv2d(277, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleThr): Sequential(
          (0): Conv2d(405, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleFou): Sequential(
          (0): Conv2d(501, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleFiv): Sequential(
          (0): Conv2d(565, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleSix): Sequential(
          (0): Conv2d(597, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (moduleFou): Decoder(
        (moduleUpflow): ConvTranspose2d(2, 2, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
        (moduleUpfeat): ConvTranspose2d(661, 2, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
        (moduleOne): Sequential(
          (0): Conv2d(181, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleTwo): Sequential(
          (0): Conv2d(309, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleThr): Sequential(
          (0): Conv2d(437, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleFou): Sequential(
          (0): Conv2d(533, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleFiv): Sequential(
          (0): Conv2d(597, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleSix): Sequential(
          (0): Conv2d(629, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (moduleFiv): Decoder(
        (moduleUpflow): ConvTranspose2d(2, 2, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
        (moduleUpfeat): ConvTranspose2d(529, 2, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
        (moduleOne): Sequential(
          (0): Conv2d(213, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleTwo): Sequential(
          (0): Conv2d(341, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleThr): Sequential(
          (0): Conv2d(469, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleFou): Sequential(
          (0): Conv2d(565, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleFiv): Sequential(
          (0): Conv2d(629, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleSix): Sequential(
          (0): Conv2d(661, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (moduleSix): Decoder(
        (moduleOne): Sequential(
          (0): Conv2d(81, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleTwo): Sequential(
          (0): Conv2d(209, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleThr): Sequential(
          (0): Conv2d(337, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleFou): Sequential(
          (0): Conv2d(433, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleFiv): Sequential(
          (0): Conv2d(497, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
        )
        (moduleSix): Sequential(
          (0): Conv2d(529, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
      (moduleRefiner): Refiner(
        (moduleMain): Sequential(
          (0): Conv2d(565, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): LeakyReLU(negative_slope=0.1)
          (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
          (3): LeakyReLU(negative_slope=0.1)
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4))
          (5): LeakyReLU(negative_slope=0.1)
          (6): Conv2d(128, 96, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8))
          (7): LeakyReLU(negative_slope=0.1)
          (8): Conv2d(96, 64, kernel_size=(3, 3), stride=(1, 1), padding=(16, 16), dilation=(16, 16))
          (9): LeakyReLU(negative_slope=0.1)
          (10): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (11): LeakyReLU(negative_slope=0.1)
          (12): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
    )
  )
  (recons_net): RECONS_VIDEO(
    (inBlock): Sequential(
      (0): Sequential(
        (0): Conv2d(10, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): ReLU(inplace=True)
      )
      (1): ResBlock(
        (conv1): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (2): ResBlock(
        (conv1): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (3): ResBlock(
        (conv1): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
    )
    (encoder_first): Sequential(
      (0): Sequential(
        (0): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (1): ReLU(inplace=True)
      )
      (1): ResBlock(
        (conv1): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (2): ResBlock(
        (conv1): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (3): ResBlock(
        (conv1): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
    )
    (encoder_second): Sequential(
      (0): Sequential(
        (0): Conv2d(64, 128, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (1): ReLU(inplace=True)
      )
      (1): ResBlock(
        (conv1): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (2): ResBlock(
        (conv1): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (3): ResBlock(
        (conv1): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
    )
    (decoder_second): Sequential(
      (0): ResBlock(
        (conv1): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (1): ResBlock(
        (conv1): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (2): ResBlock(
        (conv1): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (3): Sequential(
        (0): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
        (1): ReLU(inplace=True)
      )
    )
    (decoder_first): Sequential(
      (0): ResBlock(
        (conv1): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (1): ResBlock(
        (conv1): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (2): ResBlock(
        (conv1): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (3): Sequential(
        (0): ConvTranspose2d(64, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
        (1): ReLU(inplace=True)
      )
    )
    (outBlock): Sequential(
      (0): ResBlock(
        (conv1): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (1): ResBlock(
        (conv1): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (2): ResBlock(
        (conv1): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (conv2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (relu): ReLU(inplace=True)
      )
      (3): Conv2d(32, 3, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    )
  )
)
Epoch    1 with Lr 1.40000e-5 start: 2021-07-01 00:15:37]
	Loss: [MS-SSIM: 0.84(1 - 0.934177)][L1: 0.16(0.032101)][Total: 0.060428]
	[Now: 2021-07-01 02:04:37][CE: 2021-07-01 02:04:37][AE: 2021-07-08 13:55:39]
Now testing
	Test Epoch   1

Evaluation:
	[DVD]	average PSNR: 27.263 (Best: 27.263 @epoch 1) SSIM: 0.831684 (Best: 0.832 @epoch 1)
Epoch    2 with Lr 1.40712e-5 start: 2021-07-01 02:15:45]
	[CE: 2021-07-01 04:15:46][AE: 2021-07-09 08:26:27]
	Loss: [MS-SSIM: 0.84(1 - 0.948070)][L1: 0.16(0.024070)][Total: 0.047472]
	[Now: 2021-07-01 04:04:29][CE: 2021-07-01 04:15:35][AE: 2021-07-09 08:26:27]
Now testing
	Test Epoch   2

Evaluation:
	[DVD]	average PSNR: 27.630 (Best: 27.630 @epoch 2) SSIM: 0.839487 (Best: 0.839 @epoch 2)
Epoch    3 with Lr 1.42841e-5 start: 2021-07-01 04:15:15]
	[CE: 2021-07-01 06:14:53][AE: 2021-07-09 07:53:27]
	Loss: [MS-SSIM: 0.84(1 - 0.952268)][L1: 0.16(0.022430)][Total: 0.043684]
	[Now: 2021-07-01 06:04:07][CE: 2021-07-01 06:15:02][AE: 2021-07-09 07:53:27]
Now testing
	Test Epoch   3

Evaluation:
	[DVD]	average PSNR: 28.131 (Best: 28.131 @epoch 3) SSIM: 0.847266 (Best: 0.847 @epoch 3)
Epoch    4 with Lr 1.46363e-5 start: 2021-07-01 06:14:57]
	[CE: 2021-07-01 08:14:29][AE: 2021-07-09 07:48:59]
	Loss: [MS-SSIM: 0.84(1 - 0.955172)][L1: 0.16(0.021591)][Total: 0.041110]
	[Now: 2021-07-01 08:03:54][CE: 2021-07-01 08:14:46][AE: 2021-07-09 07:48:59]
Now testing
	Test Epoch   4

Evaluation:
	[DVD]	average PSNR: 28.116 (Best: 28.131 @epoch 3) SSIM: 0.853477 (Best: 0.853 @epoch 4)
Epoch    5 with Lr 1.51239e-5 start: 2021-07-01 08:14:45]
	[CE: 2021-07-01 10:14:15][AE: 2021-07-09 07:49:29]
	Loss: [MS-SSIM: 0.84(1 - 0.957423)][L1: 0.16(0.020950)][Total: 0.039117]
	[Now: 2021-07-01 10:05:25][CE: 2021-07-01 10:16:16][AE: 2021-07-09 07:49:29]
Now testing
	Test Epoch   5

Evaluation:
	[DVD]	average PSNR: 28.409 (Best: 28.409 @epoch 5) SSIM: 0.854027 (Best: 0.854 @epoch 5)
Epoch    6 with Lr 1.57417e-5 start: 2021-07-01 10:16:17]
	[CE: 2021-07-01 12:16:06][AE: 2021-07-09 08:24:43]
	Loss: [MS-SSIM: 0.84(1 - 0.959331)][L1: 0.16(0.020429)][Total: 0.037431]
	[Now: 2021-07-01 12:06:19][CE: 2021-07-01 12:17:09][AE: 2021-07-09 08:24:43]
Now testing
	Test Epoch   6

Evaluation:
	[DVD]	average PSNR: 28.392 (Best: 28.409 @epoch 5) SSIM: 0.854967 (Best: 0.855 @epoch 6)
Epoch    7 with Lr 1.64828e-5 start: 2021-07-01 12:17:10]
	[CE: 2021-07-01 14:17:03][AE: 2021-07-09 08:36:54]
	Loss: [MS-SSIM: 0.84(1 - 0.960939)][L1: 0.16(0.020146)][Total: 0.036035]
	[Now: 2021-07-01 14:08:02][CE: 2021-07-01 14:18:52][AE: 2021-07-09 08:36:54]
Now testing
	Test Epoch   7

Evaluation:
	[DVD]	average PSNR: 28.782 (Best: 28.782 @epoch 7) SSIM: 0.863775 (Best: 0.864 @epoch 7)
Epoch    8 with Lr 1.73392e-5 start: 2021-07-01 14:19:12]
	[CE: 2021-07-01 16:19:18][AE: 2021-07-09 09:02:21]
	Loss: [MS-SSIM: 0.84(1 - 0.962037)][L1: 0.16(0.019780)][Total: 0.035054]
	[Now: 2021-07-01 16:12:05][CE: 2021-07-01 16:22:58][AE: 2021-07-09 09:02:21]
Now testing
	Test Epoch   8

Evaluation:
	[DVD]	average PSNR: 28.907 (Best: 28.907 @epoch 8) SSIM: 0.866280 (Best: 0.866 @epoch 8)
Epoch    9 with Lr 1.83014e-5 start: 2021-07-01 16:23:00]
	[CE: 2021-07-01 18:23:27][AE: 2021-07-09 09:43:23]
	Loss: [MS-SSIM: 0.84(1 - 0.963135)][L1: 0.16(0.019492)][Total: 0.034085]
	[Now: 2021-07-01 18:13:03][CE: 2021-07-01 18:23:55][AE: 2021-07-09 09:43:23]
Now testing
	Test Epoch   9

Evaluation:
	[DVD]	average PSNR: 28.892 (Best: 28.907 @epoch 8) SSIM: 0.867833 (Best: 0.868 @epoch 9)
Epoch   10 with Lr 1.93589e-5 start: 2021-07-01 18:24:17]
	[CE: 2021-07-01 20:24:41][AE: 2021-07-09 09:46:58]
	Loss: [MS-SSIM: 0.84(1 - 0.964145)][L1: 0.16(0.019232)][Total: 0.033195]
	[Now: 2021-07-01 20:14:06][CE: 2021-07-01 20:25:01][AE: 2021-07-09 09:46:58]
Now testing
	Test Epoch  10

Evaluation:
	[DVD]	average PSNR: 29.046 (Best: 29.046 @epoch 10) SSIM: 0.869924 (Best: 0.870 @epoch 10)
Epoch   11 with Lr 2.05001e-5 start: 2021-07-01 20:25:02]
	[CE: 2021-07-01 22:25:23][AE: 2021-07-09 09:44:53]
	Loss: [MS-SSIM: 0.84(1 - 0.965174)][L1: 0.16(0.018974)][Total: 0.032289]
	[Now: 2021-07-01 22:15:54][CE: 2021-07-01 22:26:48][AE: 2021-07-09 09:44:53]
Now testing
	Test Epoch  11

Evaluation:
	[DVD]	average PSNR: 29.068 (Best: 29.068 @epoch 11) SSIM: 0.873431 (Best: 0.873 @epoch 11)
Epoch   12 with Lr 2.17125e-5 start: 2021-07-01 22:26:47]
	[CE: 2021-07-02 00:27:09][AE: 2021-07-09 09:52:13]
	Loss: [MS-SSIM: 0.84(1 - 0.965878)][L1: 0.16(0.018817)][Total: 0.031673]
	[Now: 2021-07-02 00:16:21][CE: 2021-07-02 00:27:15][AE: 2021-07-09 09:52:13]
Now testing
	Test Epoch  12

Evaluation:
	[DVD]	average PSNR: 29.373 (Best: 29.373 @epoch 12) SSIM: 0.878018 (Best: 0.878 @epoch 12)
Epoch   13 with Lr 2.29829e-5 start: 2021-07-02 00:27:14]
	[CE: 2021-07-02 02:27:30][AE: 2021-07-09 09:47:30]
	Loss: [MS-SSIM: 0.84(1 - 0.966411)][L1: 0.16(0.018680)][Total: 0.031204]
	[Now: 2021-07-02 02:16:24][CE: 2021-07-02 02:27:18][AE: 2021-07-09 09:47:30]
Now testing
	Test Epoch  13

Evaluation:
	[DVD]	average PSNR: 29.337 (Best: 29.373 @epoch 12) SSIM: 0.880104 (Best: 0.880 @epoch 13)
Epoch   14 with Lr 2.42973e-5 start: 2021-07-02 02:27:17]
	[CE: 2021-07-02 04:27:26][AE: 2021-07-09 09:40:25]
	Loss: [MS-SSIM: 0.84(1 - 0.966950)][L1: 0.16(0.018530)][Total: 0.030727]
	[Now: 2021-07-02 04:16:16][CE: 2021-07-02 04:27:09][AE: 2021-07-09 09:40:25]
Now testing
	Test Epoch  14

Evaluation:
	[DVD]	average PSNR: 28.991 (Best: 29.373 @epoch 12) SSIM: 0.871429 (Best: 0.880 @epoch 13)
Epoch   15 with Lr 2.56412e-5 start: 2021-07-02 04:27:14]
	[CE: 2021-07-02 06:27:17][AE: 2021-07-09 09:33:44]
	Loss: [MS-SSIM: 0.84(1 - 0.967709)][L1: 0.16(0.018331)][Total: 0.030058]
	[Now: 2021-07-02 06:16:20][CE: 2021-07-02 06:27:13][AE: 2021-07-09 09:33:44]
Now testing
	Test Epoch  15

Evaluation:
	[DVD]	average PSNR: 29.046 (Best: 29.373 @epoch 12) SSIM: 0.872125 (Best: 0.880 @epoch 13)
Epoch   16 with Lr 2.70001e-5 start: 2021-07-02 06:27:18]
	[CE: 2021-07-02 08:27:15][AE: 2021-07-09 09:28:39]
	Loss: [MS-SSIM: 0.84(1 - 0.968094)][L1: 0.16(0.018249)][Total: 0.029721]
	[Now: 2021-07-02 08:17:41][CE: 2021-07-02 08:28:35][AE: 2021-07-09 09:28:39]
Now testing
	Test Epoch  16

Evaluation:
	[DVD]	average PSNR: 29.500 (Best: 29.500 @epoch 16) SSIM: 0.881313 (Best: 0.881 @epoch 16)
Epoch   17 with Lr 2.83590e-5 start: 2021-07-02 08:28:46]
	[CE: 2021-07-02 10:28:43][AE: 2021-07-09 09:33:01]
	Loss: [MS-SSIM: 0.84(1 - 0.968658)][L1: 0.16(0.018026)][Total: 0.029211]
	[Now: 2021-07-02 10:18:52][CE: 2021-07-02 10:29:46][AE: 2021-07-09 09:33:01]
Now testing
	Test Epoch  17

Evaluation:
	[DVD]	average PSNR: 29.305 (Best: 29.500 @epoch 16) SSIM: 0.880033 (Best: 0.881 @epoch 16)
Epoch   18 with Lr 2.97030e-5 start: 2021-07-02 10:29:50]
	[CE: 2021-07-02 12:29:44][AE: 2021-07-09 09:34:21]
	Loss: [MS-SSIM: 0.84(1 - 0.968866)][L1: 0.16(0.017965)][Total: 0.029027]
	[Now: 2021-07-02 12:22:57][CE: 2021-07-02 12:33:52][AE: 2021-07-09 09:34:21]
Now testing
	Test Epoch  18

Evaluation:
	[DVD]	average PSNR: 29.513 (Best: 29.513 @epoch 18) SSIM: 0.885235 (Best: 0.885 @epoch 18)
Epoch   19 with Lr 3.10174e-5 start: 2021-07-02 12:34:11]
	[CE: 2021-07-02 14:34:10][AE: 2021-07-09 09:53:29]
	Loss: [MS-SSIM: 0.84(1 - 0.969404)][L1: 0.16(0.017821)][Total: 0.028552]
	[Now: 2021-07-02 14:24:02][CE: 2021-07-02 14:34:57][AE: 2021-07-09 09:53:29]
Now testing
	Test Epoch  19

Evaluation:
	[DVD]	average PSNR: 29.648 (Best: 29.648 @epoch 19) SSIM: 0.884521 (Best: 0.885 @epoch 18)
Epoch   20 with Lr 3.22877e-5 start: 2021-07-02 14:34:58]
	[CE: 2021-07-02 16:34:53][AE: 2021-07-09 09:52:14]
	Loss: [MS-SSIM: 0.84(1 - 0.969331)][L1: 0.16(0.017844)][Total: 0.028617]
	[Now: 2021-07-02 16:27:33][CE: 2021-07-02 16:38:27][AE: 2021-07-09 09:52:14]
Now testing
	Test Epoch  20

Evaluation:
	[DVD]	average PSNR: 29.731 (Best: 29.731 @epoch 20) SSIM: 0.888588 (Best: 0.889 @epoch 20)
Epoch   21 with Lr 3.35001e-5 start: 2021-07-02 16:38:36]
	[CE: 2021-07-02 18:38:36][AE: 2021-07-09 10:05:18]
	Loss: [MS-SSIM: 0.84(1 - 0.969840)][L1: 0.16(0.017646)][Total: 0.028158]
	[Now: 2021-07-02 18:27:47][CE: 2021-07-02 18:38:42][AE: 2021-07-09 10:05:18]
Now testing
	Test Epoch  21

Evaluation:
	[DVD]	average PSNR: 29.715 (Best: 29.731 @epoch 20) SSIM: 0.885242 (Best: 0.889 @epoch 20)
Epoch   22 with Lr 3.46413e-5 start: 2021-07-02 18:38:44]
	[CE: 2021-07-02 20:38:36][AE: 2021-07-09 10:00:19]
	Loss: [MS-SSIM: 0.84(1 - 0.969712)][L1: 0.16(0.017708)][Total: 0.028275]
	[Now: 2021-07-02 20:31:03][CE: 2021-07-02 20:41:58][AE: 2021-07-09 10:00:19]
Now testing
	Test Epoch  22

Evaluation:
	[DVD]	average PSNR: 29.834 (Best: 29.834 @epoch 22) SSIM: 0.889189 (Best: 0.889 @epoch 22)
Epoch   23 with Lr 3.56988e-5 start: 2021-07-02 20:42:34]
	[CE: 2021-07-02 22:42:26][AE: 2021-07-09 10:12:26]
	Loss: [MS-SSIM: 0.84(1 - 0.970287)][L1: 0.16(0.017524)][Total: 0.027763]
	[Now: 2021-07-02 22:32:37][CE: 2021-07-02 22:43:34][AE: 2021-07-09 10:12:26]
Now testing
	Test Epoch  23

Evaluation:
	[DVD]	average PSNR: 28.988 (Best: 29.834 @epoch 22) SSIM: 0.875583 (Best: 0.889 @epoch 22)
Epoch   24 with Lr 3.66610e-5 start: 2021-07-02 22:43:45]
	[CE: 2021-07-03 00:43:35][AE: 2021-07-09 10:12:20]
	Loss: [MS-SSIM: 0.84(1 - 0.970404)][L1: 0.16(0.017472)][Total: 0.027656]
	[Now: 2021-07-03 00:33:58][CE: 2021-07-03 00:44:55][AE: 2021-07-09 10:12:20]
Now testing
	Test Epoch  24

Evaluation:
	[DVD]	average PSNR: 29.908 (Best: 29.908 @epoch 24) SSIM: 0.888033 (Best: 0.889 @epoch 22)
Epoch   25 with Lr 3.75173e-5 start: 2021-07-03 00:45:07]
	[CE: 2021-07-03 02:44:51][AE: 2021-07-09 10:12:44]
	Loss: [MS-SSIM: 0.84(1 - 0.970623)][L1: 0.16(0.017363)][Total: 0.027455]
	[Now: 2021-07-03 02:40:49][CE: 2021-07-03 02:51:46][AE: 2021-07-09 10:12:44]
Now testing
	Test Epoch  25

Evaluation:
	[DVD]	average PSNR: 29.353 (Best: 29.908 @epoch 24) SSIM: 0.878616 (Best: 0.889 @epoch 22)
Epoch   26 with Lr 3.82584e-5 start: 2021-07-03 02:51:56]
	[CE: 2021-07-03 04:51:49][AE: 2021-07-09 10:35:03]
	Loss: [MS-SSIM: 0.84(1 - 0.970942)][L1: 0.16(0.017305)][Total: 0.027178]
	[Now: 2021-07-03 04:41:34][CE: 2021-07-03 04:52:31][AE: 2021-07-09 10:35:03]
Now testing
	Test Epoch  26

Evaluation:
	[DVD]	average PSNR: 29.955 (Best: 29.955 @epoch 26) SSIM: 0.891658 (Best: 0.892 @epoch 26)
Epoch   27 with Lr 3.88762e-5 start: 2021-07-03 04:52:30]
	[CE: 2021-07-03 06:52:19][AE: 2021-07-09 10:31:42]
	Loss: [MS-SSIM: 0.84(1 - 0.971079)][L1: 0.16(0.017232)][Total: 0.027051]
	[Now: 2021-07-03 06:41:22][CE: 2021-07-03 06:52:19][AE: 2021-07-09 10:31:42]
Now testing
	Test Epoch  27

Evaluation:
	[DVD]	average PSNR: 29.856 (Best: 29.955 @epoch 26) SSIM: 0.889318 (Best: 0.892 @epoch 26)
Epoch   28 with Lr 3.93638e-5 start: 2021-07-03 06:52:12]
	[CE: 2021-07-03 08:51:54][AE: 2021-07-09 10:25:21]
	Loss: [MS-SSIM: 0.84(1 - 0.971487)][L1: 0.16(0.017103)][Total: 0.026687]
	[Now: 2021-07-03 08:41:42][CE: 2021-07-03 08:52:38][AE: 2021-07-09 10:25:21]
Now testing
	Test Epoch  28

Evaluation:
	[DVD]	average PSNR: 30.020 (Best: 30.020 @epoch 28) SSIM: 0.894293 (Best: 0.894 @epoch 28)
Epoch   29 with Lr 3.97160e-5 start: 2021-07-03 08:52:38]
	[CE: 2021-07-03 10:52:15][AE: 2021-07-09 10:22:04]
	Loss: [MS-SSIM: 0.84(1 - 0.971517)][L1: 0.16(0.017066)][Total: 0.026656]
	[Now: 2021-07-03 10:42:46][CE: 2021-07-03 10:53:42][AE: 2021-07-09 10:22:04]
Now testing
	Test Epoch  29

Evaluation:
	[DVD]	average PSNR: 29.934 (Best: 30.020 @epoch 28) SSIM: 0.891828 (Best: 0.894 @epoch 28)
Epoch   30 with Lr 3.99288e-5 start: 2021-07-03 10:54:24]
	[CE: 2021-07-03 12:53:57][AE: 2021-07-09 10:23:35]
	Loss: [MS-SSIM: 0.84(1 - 0.971921)][L1: 0.16(0.016968)][Total: 0.026301]
	[Now: 2021-07-03 12:50:00][CE: 2021-07-03 13:00:58][AE: 2021-07-09 10:23:35]
Now testing
	Test Epoch  30

Evaluation:
	[DVD]	average PSNR: 30.001 (Best: 30.020 @epoch 28) SSIM: 0.891636 (Best: 0.894 @epoch 28)
Epoch   31 with Lr 4.00000e-5 start: 2021-07-03 13:01:23]
	[CE: 2021-07-03 15:00:54][AE: 2021-07-09 10:41:52]
	Loss: [MS-SSIM: 0.84(1 - 0.972005)][L1: 0.16(0.016888)][Total: 0.026218]
	[Now: 2021-07-03 14:51:15][CE: 2021-07-03 15:02:14][AE: 2021-07-09 10:41:52]
Now testing
	Test Epoch  31

Evaluation:
	[DVD]	average PSNR: 30.170 (Best: 30.170 @epoch 31) SSIM: 0.895609 (Best: 0.896 @epoch 31)
Epoch   32 with Lr 3.99799e-5 start: 2021-07-03 15:02:14]
	[CE: 2021-07-03 17:01:41][AE: 2021-07-09 10:39:43]
	Loss: [MS-SSIM: 0.84(1 - 0.972323)][L1: 0.16(0.016843)][Total: 0.025943]
	[Now: 2021-07-03 16:52:00][CE: 2021-07-03 17:02:59][AE: 2021-07-09 10:39:43]
Now testing
	Test Epoch  32

Evaluation:
	[DVD]	average PSNR: 30.165 (Best: 30.170 @epoch 31) SSIM: 0.895097 (Best: 0.896 @epoch 31)
Epoch   33 with Lr 3.99195e-5 start: 2021-07-03 17:03:06]
	[CE: 2021-07-03 19:02:29][AE: 2021-07-09 10:37:46]
	Loss: [MS-SSIM: 0.84(1 - 0.972393)][L1: 0.16(0.016766)][Total: 0.025873]
	[Now: 2021-07-03 18:57:33][CE: 2021-07-03 19:08:31][AE: 2021-07-09 10:37:46]
Now testing
	Test Epoch  33

Evaluation:
	[DVD]	average PSNR: 30.100 (Best: 30.170 @epoch 31) SSIM: 0.893972 (Best: 0.896 @epoch 31)
Epoch   34 with Lr 3.98190e-5 start: 2021-07-03 19:09:06]
	[CE: 2021-07-03 21:08:24][AE: 2021-07-09 10:51:01]
	Loss: [MS-SSIM: 0.84(1 - 0.973006)][L1: 0.16(0.016657)][Total: 0.025340]
	[Now: 2021-07-03 21:01:14][CE: 2021-07-03 21:12:13][AE: 2021-07-09 10:51:01]
Now testing
	Test Epoch  34

Evaluation:
	[DVD]	average PSNR: 29.801 (Best: 30.170 @epoch 31) SSIM: 0.887562 (Best: 0.896 @epoch 31)
Epoch   35 with Lr 3.96786e-5 start: 2021-07-03 21:12:49]
	[CE: 2021-07-03 23:12:07][AE: 2021-07-09 10:57:11]
	Loss: [MS-SSIM: 0.84(1 - 0.973147)][L1: 0.16(0.016585)][Total: 0.025210]
	[Now: 2021-07-03 23:04:50][CE: 2021-07-03 23:15:50][AE: 2021-07-09 10:57:11]
Now testing
	Test Epoch  35

Evaluation:
	[DVD]	average PSNR: 30.079 (Best: 30.170 @epoch 31) SSIM: 0.896076 (Best: 0.896 @epoch 35)
Epoch   36 with Lr 3.94985e-5 start: 2021-07-03 23:15:57]
	[CE: 2021-07-04 01:15:15][AE: 2021-07-09 11:01:23]
	Loss: [MS-SSIM: 0.84(1 - 0.973258)][L1: 0.16(0.016503)][Total: 0.025104]
	[Now: 2021-07-04 01:06:26][CE: 2021-07-04 01:17:26][AE: 2021-07-09 11:01:23]
Now testing
	Test Epoch  36

Evaluation:
	[DVD]	average PSNR: 30.109 (Best: 30.170 @epoch 31) SSIM: 0.893394 (Best: 0.896 @epoch 35)
Epoch   37 with Lr 3.92792e-5 start: 2021-07-04 01:17:31]
	[CE: 2021-07-04 03:16:42][AE: 2021-07-09 11:00:51]
	Loss: [MS-SSIM: 0.84(1 - 0.973416)][L1: 0.16(0.016489)][Total: 0.024968]
	[Now: 2021-07-04 03:08:38][CE: 2021-07-04 03:19:38][AE: 2021-07-09 11:00:51]
Now testing
	Test Epoch  37

Evaluation:
	[DVD]	average PSNR: 30.286 (Best: 30.286 @epoch 37) SSIM: 0.897341 (Best: 0.897 @epoch 37)
Epoch   38 with Lr 3.90211e-5 start: 2021-07-04 03:20:16]
	[CE: 2021-07-04 05:19:21][AE: 2021-07-09 11:03:28]
	Loss: [MS-SSIM: 0.84(1 - 0.973681)][L1: 0.16(0.016376)][Total: 0.024728]
	[Now: 2021-07-04 05:15:10][CE: 2021-07-04 05:26:11][AE: 2021-07-09 11:03:28]
Now testing
	Test Epoch  38

Evaluation:
	[DVD]	average PSNR: 30.288 (Best: 30.288 @epoch 38) SSIM: 0.897860 (Best: 0.898 @epoch 38)
Epoch   39 with Lr 3.87247e-5 start: 2021-07-04 05:26:37]
	[CE: 2021-07-04 07:25:33][AE: 2021-07-09 11:15:03]
	Loss: [MS-SSIM: 0.84(1 - 0.973842)][L1: 0.16(0.016309)][Total: 0.024582]
	[Now: 2021-07-04 07:16:08][CE: 2021-07-04 07:27:09][AE: 2021-07-09 11:15:03]
Now testing
	Test Epoch  39

Evaluation:
	[DVD]	average PSNR: 30.084 (Best: 30.288 @epoch 38) SSIM: 0.895235 (Best: 0.898 @epoch 38)
Epoch   40 with Lr 3.83905e-5 start: 2021-07-04 07:27:13]
	[CE: 2021-07-04 09:26:01][AE: 2021-07-09 11:11:42]
	Loss: [MS-SSIM: 0.84(1 - 0.973671)][L1: 0.16(0.016313)][Total: 0.024726]
	[Now: 2021-07-04 09:16:34][CE: 2021-07-04 09:27:35][AE: 2021-07-09 11:11:42]
Now testing
	Test Epoch  40

Evaluation:
	[DVD]	average PSNR: 30.179 (Best: 30.288 @epoch 38) SSIM: 0.897624 (Best: 0.898 @epoch 38)
Epoch   41 with Lr 3.80194e-5 start: 2021-07-04 09:27:34]
	[CE: 2021-07-04 11:26:17][AE: 2021-07-09 11:08:04]
	Loss: [MS-SSIM: 0.84(1 - 0.974003)][L1: 0.16(0.016222)][Total: 0.024433]
	[Now: 2021-07-04 11:16:56][CE: 2021-07-04 11:27:57][AE: 2021-07-09 11:08:04]
Now testing
	Test Epoch  41

Evaluation:
	[DVD]	average PSNR: 30.132 (Best: 30.288 @epoch 38) SSIM: 0.893949 (Best: 0.898 @epoch 38)
Epoch   42 with Lr 3.76119e-5 start: 2021-07-04 11:28:06]
	[CE: 2021-07-04 13:26:43][AE: 2021-07-09 11:05:01]
	Loss: [MS-SSIM: 0.84(1 - 0.974208)][L1: 0.16(0.016169)][Total: 0.024253]
	[Now: 2021-07-04 13:19:39][CE: 2021-07-04 13:30:40][AE: 2021-07-09 11:05:01]
Now testing
	Test Epoch  42

Evaluation:
	[DVD]	average PSNR: 29.963 (Best: 30.288 @epoch 38) SSIM: 0.890316 (Best: 0.898 @epoch 38)
Epoch   43 with Lr 3.71690e-5 start: 2021-07-04 13:33:13]
	[CE: 2021-07-04 15:31:45][AE: 2021-07-09 11:12:46]
	Loss: [MS-SSIM: 0.84(1 - 0.974564)][L1: 0.16(0.016075)][Total: 0.023938]
	[Now: 2021-07-04 15:29:54][CE: 2021-07-04 15:40:58][AE: 2021-07-09 11:12:46]
Now testing
	Test Epoch  43

Evaluation:
	[DVD]	average PSNR: 30.385 (Best: 30.385 @epoch 43) SSIM: 0.899329 (Best: 0.899 @epoch 43)
Epoch   44 with Lr 3.66915e-5 start: 2021-07-04 15:43:29]
	[CE: 2021-07-04 17:42:05][AE: 2021-07-09 11:32:13]
	Loss: [MS-SSIM: 0.84(1 - 0.974448)][L1: 0.16(0.016047)][Total: 0.024032]
	[Now: 2021-07-04 17:35:25][CE: 2021-07-04 17:46:33][AE: 2021-07-09 11:32:13]
Now testing
	Test Epoch  44

Evaluation:
	[DVD]	average PSNR: 30.408 (Best: 30.408 @epoch 44) SSIM: 0.898583 (Best: 0.899 @epoch 43)
